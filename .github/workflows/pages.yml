# Script based on examples in https://github.com/actions/starter-workflows/tree/main/pages
name: Deploy slides to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/csc-training/slidefactory:3.0.0-beta.6
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build slides
        run: |
          mkdir build

          mkdir -p build/theme/csc-plain
          cp /slidefactory/theme/csc-plain/csc.css build/theme/csc-plain/
          cp -r /slidefactory/theme/csc-plain/img build/theme/csc-plain/

          /slidefactory/slidefactory.py --format html docs/*.md -o build/ --theme_url theme/csc-plain/csc.css

          for f in build/*.html; do
            echo "* [${f##*/}](${f#build/}){target=\"_blank\"}" >> index.md
          done

          cat index.md
          pandoc --standalone --metadata title="Node-Level Performance Optimization" index.md -o build/index.html
          rm index.md
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
